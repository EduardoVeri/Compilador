1: int fibonacci(int n){
	1: reserved word , int
	1: ID, fibonacci
	1: ABREPARENTESES, (
	1: reserved word , int
	1: ID, n
	1: FECHAPARENTESES, )
	1: ABRECHAVES, {
2: int x;
	2: reserved word , int
	2: ID, x
	2: SEMICOLON, ;
3: if(n == 1) return 1;
	3: reserved word , if
	3: ABREPARENTESES, (
	3: ID, n
	3: EQ, ==
	3: NUM, 1
	3: FECHAPARENTESES, )
	3: reserved word , return
	3: NUM, 1
	3: SEMICOLON, ;
4: else{
	4: reserved word , else
	4: ABRECHAVES, {
5: if(n == 2) return 1;
	5: reserved word , if
	5: ABREPARENTESES, (
	5: ID, n
	5: EQ, ==
	5: NUM, 2
	5: FECHAPARENTESES, )
	5: reserved word , return
	5: NUM, 1
	5: SEMICOLON, ;
6: else return fibonacci(n-1) + fibonacci(n-2);
	6: reserved word , else
	6: reserved word , return
	6: ID, fibonacci
	6: ABREPARENTESES, (
	6: ID, n
	6: SUB, -
	6: NUM, 1
	6: FECHAPARENTESES, )
	6: SOMA, +
	6: ID, fibonacci
	6: ABREPARENTESES, (
	6: ID, n
	6: SUB, -
	6: NUM, 2
	6: FECHAPARENTESES, )
	6: SEMICOLON, ;
7: }
	7: FECHACHAVES, }
8: }
	8: FECHACHAVES, }
9: 
10: int main(void){
	10: reserved word , int
	10: ID, main
	10: ABREPARENTESES, (
	10: reserved word , void
	10: FECHAPARENTESES, )
	10: ABRECHAVES, {
11: int resp;
	11: reserved word , int
	11: ID, resp
	11: SEMICOLON, ;
12: resp = fibonacci(4);
	12: ID, resp
	12: ATRIB, =
	12: ID, fibonacci
	12: ABREPARENTESES, (
	12: NUM, 4
	12: FECHAPARENTESES, )
	12: SEMICOLON, ;
13: output(resp);
	13: ID, output
	13: ABREPARENTESES, (
	13: ID, resp
	13: FECHAPARENTESES, )
	13: SEMICOLON, ;
	14: FECHACHAVES, }
	14: EOF

========== Arvore de Analise Sintatica ========== 
INT
	INT
		n
	fibonacci
		INT
			x
		IF
			==
				n
				1
			ReturnINT
				1
			IF
				==
					n
					2
				ReturnINT
					1
				ReturnINT
					+
						fibonacci
							-
								n
								1
						fibonacci
							-
								n
								2
INT
	VOID
	main
		INT
			resp
		=
			resp
			fibonacci
				4
		output
			resp


============== Tabela de Simbolos ===============
Nome: main
Tipo de dado: INT
Tipo de identificador: FUN
Linhas: 10 

Nome: input
Tipo de dado: INT
Tipo de identificador: FUN
Linhas: 0 

Nome: fibonacci
Tipo de dado: INT
Tipo de identificador: FUN
Linhas: 1 6 6 12 

Nome: n
Escopo: fibonacci
Tipo de dado: INT
Tipo de identificador: PARAM
Linhas: 1 3 5 6 6 

Nome: output
Tipo de dado: VOID
Tipo de identificador: FUN
Linhas: 0 13 

Nome: x
Escopo: fibonacci
Tipo de dado: INT
Tipo de identificador: VAR
Linhas: 2 

Nome: resp
Escopo: main
Tipo de dado: INT
Tipo de identificador: VAR
Linhas: 11 12 13 

