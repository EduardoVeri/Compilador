1: int main(void){
	1: reserved word , int
	1: ID, main
	1: ABREPARENTESES, (
	1: reserved word , void
	1: FECHAPARENTESES, )
	1: ABRECHAVES, {
2: int x[10];
	2: reserved word , int
	2: ID, x
	2: ABRECOLCHETES, [
	2: NUM, 10
	2: FECHACOLCHETES, ]
	2: SEMICOLON, ;
3: 
4: /*x[10 + 20] = 20 + 30;*/
5: 
6: x[1+2] = x[10] + 20;
	6: ID, x
	6: ABRECOLCHETES, [
	6: NUM, 1
	6: SOMA, +
	6: NUM, 2
	6: FECHACOLCHETES, ]
	6: ATRIB, =
	6: ID, x
	6: ABRECOLCHETES, [
	6: NUM, 10
	6: FECHACOLCHETES, ]
	6: SOMA, +
	6: NUM, 20
	6: SEMICOLON, ;
7: 
8: return 0;
	8: reserved word , return
	8: NUM, 0
	8: SEMICOLON, ;
	9: FECHACHAVES, }
	9: EOF

========== Arvore de Analise Sintatica ========== 
INT
	VOID
	main
		INT
			x
			10
		=
			x
				+
					1
					2
			+
				x
					10
				20
		ReturnINT
			0


============== Tabela de Simbolos ===============
Nome: main
Tipo de dado: INT
Tipo de identificador: FUN
Linhas: 1 

Nome: input
Tipo de dado: INT
Tipo de identificador: FUN
Linhas: 0 

Nome: output
Tipo de dado: VOID
Tipo de identificador: FUN
Linhas: 0 

Nome: x
Escopo: main
Tipo de dado: INT
Tipo de identificador: VET
Linhas: 2 6 6 

