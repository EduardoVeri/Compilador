/* Defines for VGA */

int ORIGINALVGAWIDTH; int ORIGINALVGAHEIGHT;
int currentvgaheight; int currentvgawidth;
int DIVISORFACTOR;

int SLEEPTIME;

void sleep(int time) {
    int i;
    i = 0;
    while (i < time) {
        i = i + 1;
    }
}
void outputAndSleep(int value, int sleeptime) {
    output(value);
    sleep(sleeptime); 
}


/* Draw a pixel at (x, y) on the VGA screen.
* (!) The x zero point is at the top left corner
 * (!) and the y zero point is at the top left corner.
 */
void drawpixelVGA(int x, int y, int color) {
    int framebufferindex; 

    /* Out of bounds checks */
    if (x < 0) {
        return; 
    }
    if (x >= currentvgawidth) {
        return; 
    }
    if (y < 0) {
        return; 
    }
    if (y >= currentvgaheight) {
        return; 
    }
    
    framebufferindex = y * currentvgawidth + x;

    drawpixel(framebufferindex, color);
}


/* Create bars and ball */ 
void initFrameVGA(void) {
    int barwidth; int barheight; int ballsize;
    int colorbar; int colorball;
    int centerheight;
    int halfbarheight;
    int i; int j;
    int spaceedgebar;
    
    spaceedgebar = 1; /* Space from the edge of the screen to the bar */
    barwidth = 2; 
    barheight = 10; 
    ballsize = 2; /* 2x2 square */
    colorbar = 5; 
    colorball = 3; 
    
    
    centerheight = currentvgaheight / 2; /* Center of the screen */
    halfbarheight = barheight / 2;
    
    /* Draw left bar */
    i = centerheight - halfbarheight;
    while (i < (centerheight + halfbarheight)) {
        j = spaceedgebar;
        while (j < (spaceedgebar + barwidth)) {
            drawpixelVGA(j, i, colorbar);
            j = j + 1;
        }
        i = i + 1;
    }

    /* Draw right bar */
    i = centerheight - halfbarheight;
    while (i < (centerheight + halfbarheight)) {
        j = currentvgawidth - spaceedgebar - barwidth;
        while (j < (currentvgawidth - spaceedgebar)) {
            drawpixelVGA(j, i, colorbar);
            j = j + 1;
        }
        i = i + 1;
    }



}



int main(void){
    int count;

    DIVISORFACTOR = 16;
    ORIGINALVGAWIDTH = 640;
    ORIGINALVGAHEIGHT = 480;

    SLEEPTIME = 1; /* Sleep time in milliseconds */
    
    currentvgawidth = ORIGINALVGAWIDTH / DIVISORFACTOR;
    currentvgaheight = ORIGINALVGAHEIGHT / DIVISORFACTOR;

    initFrameVGA(); /* Create the bars and ball */
    while (1) { /* Game logic */
        output(1); 

    }

    return 0;
}